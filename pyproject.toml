[project]
name = "om1"
version = "0.1.0"
description = "OM1 - a modern agent and robotics runtime system"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "soundfile",
    "sounddevice",
    "json5",
    "jsonschema",
    "pyaudio",
    "openai>=1.59.5",
    "pillow>=11.1.0",
    "python-dotenv>=1.0.1",
    "typer>=0.15.1",
    "numpy",
    "pydub>=0.25.1",
    "aiohttp>=3.9.3",
    "faster-whisper>=1.0.0",
    "piper-tts>=1.2.0",
    "nest-asyncio>=1.6.0",
    "requests",
    "websockets>=12.0",
    "eclipse-zenoh>=1.4.0",
    "pycdr2",
    "opencv-python-headless>=4.11.0.86",
    "tokenizers==0.22.1",
    "ultralytics>=8.3.218",
]

[dependency-groups]
dev = [
    "black>=24.10.0",
    "isort>=5.13.2",
    "pre-commit>=4.1.0",
    "pyright>=1.1.406",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.2",
    "ruff>=0.9.3",
]

[tool.pytest.ini_options]
pythonpath = ["src"]
asyncio_mode = "auto"
addopts = "-m \"not integration\""
norecursedirs = ["src/unitree", "system_hw_test", "gazebo", "src/ubtech"]
markers = [
    "integration: marks tests as integration tests",
]

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = "(.venv)|(/src/unitree)|(/src/ubtech)|(/gazebo)"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
sources = ["src", "tests"]
skip_glob = [".venv*", "/src/unitree", "/gazebo", "/src/ubtech"]

[tool.ruff]
line-length = 88
indent-width = 4
src = ["src"]
exclude = ["src/unitree","gazebo", "src/ubtech"]

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E203", "E501"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
